module load GCC/10.2.0
module load CMake/3.18.4
#module load X11/.20201008
#module load cairo/.1.16.0
#module load libreadline/.8.0
#module load PCRE2/.10.35
#module load XZ/.5.2.5
module load OpenBLAS/0.3.12
module load bzip2/.1.0.8
module load Perl/5.32.0
module load Java/13.0.2
#module load libjpeg-turbo/.2.0.5

#module load CMake/3.13.
#module load Python/3.7.2
#module load GCC/8.2.0  
#module load OpenMPI/3.1.4
#module load HDF5/1.10.5
#module load Perl/5.28.1
#module load SAMtools/1.9
#module load Java/11.0.2

#rstudio
#export QT_XKB_CONFIG_ROOT=/usr/share/X11/xkb
#MY_RSTUDIO_BIN=/scratch/cqs/shengq2/tools/rstudio-1.1.456/bin

export PATH=/data/cqs/softwares/pypy/bin:/data/cqs/softwares/STAR-Fusion:/data/cqs/softwares/Recon:/scratch/cqs_share/softwares/supernova:/scratch/cqs_share/softwares/strelka/bin:/scratch/cqs/softwares/firefox:$PATH

hn=$(hostname)
#echo $hn

export SINGULARITY_BINDPATH="/gpfs23,/gpfs51,/gpfs52,/data,/scratch,/nobackup,/home,/tmp"
export SINGULARITY_TMPDIR=/scratch/cqs_share/softwares/singularity/temp
export SINGULARITY_CACHEDIR=/scratch/cqs_share/softwares/singularity/cache

if [ -z "$R_LIBS" ]
then
  export R_LIBS=$MY_R_LIBS
else
  export R_LIBS=$MY_R_LIBS:$R_LIBS
fi

MY_ENCODE_BIN=/scratch/cqs_share/softwares/encode/chip-seq-pipeline2/src
MY_CELLRANGER_BIN=/data/cqs/softwares/10x/cellranger-6.0.2
MY_GSEA_BIN=/scratch/cqs_share/softwares/GSEA
MY_SRA_BIN=/scratch/cqs_share/softwares/sratoolkit/bin
MY_STACK_BIN=/scratch/cqs_share/softwares/stack
MY_PANDOC_BIN=/scratch/cqs_share/softwares/pandoc/bin

MY_SHARE_BIN=/scratch/cqs_share/softwares/local/bin
MY_FASTQC_BIN=/data/cqs/softwares/FastQC

MYBIN=/data/cqs/softwares/ngsperl/bin:/data/cqs/softwares/local/bin:/scratch/cqs_share/softwares/arcasHLA:$MY_SHARE_BIN:$MY_PANDOC_BIN:$MY_STACK_BIN:$MY_SRA_BIN:$MY_GSEA_BIN:$MY_CELLRANGER_BIN:$MY_ENCODE_BIN:$MY_PYTHON_BIN:/scratch/cqs_share/softwares/edirect:/scratch/cqs/softwares/local/bin:/scratch/cqs/softwares/subread/bin:/scratch/cqs/softwares/gatk4:/scratch/cqs/shengq2/gcloud/open_wdl/runners/cromwell_on_google/monitoring_tools:/scratch/cqs/softwares/ensembl-git-tools/bin:/home/shengq2/program/perl/bin

ANNOVAR=/scratch/cqs_share/softwares/annovar

HOMER=/scratch/cqs/softwares/homer2/bin

BOWTIE=/data/cqs/softwares/bowtie
BOWTIE2=/data/cqs/softwares/bowtie2:/data/cqs/softwares/bowtie2/scripts

MY_PERL_BIN=/home/shengq2/perl5/bin
MY_PERL_LIB=/data/cqs/softwares/ngsperl/lib/:/data/cqs/softwares/cqsperl/lib/:/home/shengq2/perl5/lib/perl5/

if [ -z "$PERL5LIB" ]
then
  export PERL5LIB=$MY_PERL_LIB
else
  export PERL5LIB=$MY_PERL_LIB:$PERL5LIB
fi

MY_BLAST_BIN=/scratch/cqs_share/softwares/ncbi-blast/bin
export PATH=$MY_PERL_BIN:$MY_BLAST_BIN:$MYBIN:$BOWTIE:$BOWTIE2:$ANNOVAR:$HOMER:$PATH

MYINCLUDE=/data/cqs/softwares/local/include:/scratch/cqs/softwares/local/include
if [ -z "$C_INCLUDE_PATH" ]
then
  export C_INCLUDE_PATH=$MYINCLUDE
else
  export C_INCLUDE_PATH=$MYINCLUDE:$C_INCLUDE_PATH
fi

if [ -z "$CPATH" ]
then
  export CPATH=$MYINCLUDE
else
  export CPATH=$MYINCLUDE:$CPATH
fi

if [ -z "$CPLUS_INCLUDE_PATH" ]
then
  export CPLUS_INCLUDE_PATH=$MYINCLUDE
else
  export CPLUS_INCLUDE_PATH=$MYINCLUDE:$C_INCLUDE_PATH
fi

alias ptools='mono /home/shengq2/proteomicstools/ProteomicsTools.exe'

MYLIB=/data/cqs/softwares/local/lib:/scratch/cqs/softwares/local/lib
if [ -z "$LD_LIBRARY_PATH" ]
then
  export LD_LIBRARY_PATH=$MYLIB
else
  export LD_LIBRARY_PATH=$MYLIB:$LD_LIBRARY_PATH
fi

if [ -z "$LIBRARY_PATH" ]
then
  export LIBRARY_PATH=$MYLIB
else
  export LIBRARY_PATH=$MYLIB:$LIBRARY_PATH
fi

export BLASTDB=/scratch/cqs/shengq2/references/blastdb

export VEP_PATH=/scratch/cqs/softwares/ensembl-vep
export VEP_DATA=/scratch/cqs/references/vep_data
export PERL5LIB=/scratch/cqs/softwares/ensembl-io/modules:/scratch/cqs/softwares/ensembl-compara/modules:/scratch/cqs/softwares/ensembl-funcgen/modules:/scratch/cqs/softwares/ensembl-variation/modules:/scratch/cqs/softwares/ensembl/modules:$VEP_PATH:$PERL5LIB
export PATH=$VEP_PATH/htslib:$PATH


source /home/shengq2/program/cqsperl/scripts/path_alias.txt

alias cqstools='singularity exec -e /scratch/cqs_share/softwares/singularity/cqs-smallRNA.simg cqstools'
alias lcqstools='singularity exec -e /data/cqs/softwares/singularity/cqs-smallRNA.simg mono /home/shengq2/cqstools/cqstools.exe'
alias fastqc='singularity exec /scratch/cqs_share/softwares/singularity/cqs-chipseq.simg fastqc'
alias qd='scontrol show jobid -dd '

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/scratch/cqs_share/softwares/google-cloud-sdk/path.bash.inc' ]; then . '/scratch/cqs_share/softwares/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/scratch/cqs_share/softwares/google-cloud-sdk/completion.bash.inc' ]; then . '/scratch/cqs_share/softwares/google-cloud-sdk/completion.bash.inc'; fi

#use conda python
module load Anaconda3/2021.11

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/accre/arch/easybuild/software/BinDist/Anaconda3/2021.11/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/accre/arch/easybuild/software/BinDist/Anaconda3/2021.11/etc/profile.d/conda.sh" ]; then
        . "/accre/arch/easybuild/software/BinDist/Anaconda3/2021.11/etc/profile.d/conda.sh"
    else
        export PATH="/accre/arch/easybuild/software/BinDist/Anaconda3/2021.11/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

conda activate /scratch/cqs/shengq2/conda

